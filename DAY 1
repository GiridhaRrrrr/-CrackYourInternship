
// Remove Duplicates from Sorted Array
class Solution {
    public int removeDuplicates(int[] nums) {
        if(nums.length==1 || nums.length==0){            
            return nums.length;
        }
        int i=1,j=1;
        while(i<nums.length && j<nums.length){
            if(nums[i-1]==nums[i]){
                i++;
            }
            else{
               nums[j]=nums[i];
               j++;
               i++; 
            }
        }
        return j;
    }
}

//Move Zeroes
class Solution {
    public void moveZeroes(int[] nums) {
        int i=0,j=0;
        int n=nums.length;
        while(i<n && j<n){
            if(nums[i]!=0){
                nums[j]=nums[i];
                i++;
                j++;
            }
            else{
                i++;
            }
        } 
        while(j<n){
            nums[j]=0;
            j++;
        } 
          
    }
}

//Best Time to Buy and Sell Stock
class Solution {
    public int maxProfit(int[] prices) {
        int totalprofit=0;
        int min=prices[0];
        for(int i=1;i<prices.length;i++){
            if(prices[i]<min){
                min=prices[i];
            } 
            else{
                int profit=prices[i]-min;
                totalprofit=Math.max(totalprofit,profit);
            }          
        }
       return totalprofit; 
    }
}
